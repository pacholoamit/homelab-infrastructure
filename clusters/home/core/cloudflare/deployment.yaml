# From: https://github.com/cloudflare/argo-tunnel-examples/blob/master/named-tunnel-k8s/cloudflared.yaml

# Make sure to add secret first
# kubectl create secret  generic tunnel-credentials \
#  -n cloudflare --from-file=credentials.json=/Users/pacholoamit/.cloudflared/d0a7216a-3354-4a5d-9f0d-9a63be7b8934.json

# NOTE: 1 cert.pem for each zone is needed so to manage multiple zones/domains you'll have to hot swap cert.pems when 
# you run `cloudflared tunnel login
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
spec:
  selector:
    matchLabels:
      app: cloudflared
  replicas: 2
  template:
    metadata:
      labels:
        app: cloudflared
    spec:
      # Affinity ensures that the two replicas of cloudflared are scheduled on different nodes.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - cloudflared
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: cloudflared
          image: cloudflare/cloudflared:2024.12.2
          imagePullPolicy: IfNotPresent
          args:
            - tunnel
            - --config
            - /etc/cloudflared/config/config.yaml
            - run
          livenessProbe:
            httpGet:
              path: /ready
              port: 2000
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /etc/cloudflared/config
              readOnly: true
            - name: creds
              mountPath: /etc/cloudflared/creds
              readOnly: true
      volumes:
        - name: creds
          secret:
            secretName: tunnel-credentials
        - name: config
          configMap:
            name: cloudflared
            items:
              - key: config.yaml
                path: config.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudflared
  namespace: cloudflare
data:
  config.yaml: |
    tunnel: home-k3s-cluster
    credentials-file: /etc/cloudflared/creds/credentials.json
    metrics: 0.0.0.0:2000
    originRequest:
      noTLSVerify: true 

    ingress:
    - service: https://ingress-nginx-controller.ingress-nginx.svc.cluster.local:443
