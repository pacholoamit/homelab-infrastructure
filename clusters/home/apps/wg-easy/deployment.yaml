apiVersion: apps/v1
kind: Deployment
metadata:
  name: wg-easy
  labels:
    app: wg-easy
spec:
  replicas: 3
  selector:
    matchLabels:
      app: wg-easy
  template:
    metadata:
      labels:
        app: wg-easy
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: "kubernetes.io/hostname"
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: wg-easy
      restartPolicy: Always
      initContainers:
        - name: init
          image: busybox:1.32.0
          command:
            - sh
            - -c
            - sysctl -w net.ipv4.ip_forward=1 && sysctl -w net.ipv4.conf.all.forwarding=1
          securityContext:
            privileged: true
            capabilities:
              add:
                - NET_ADMIN
      containers:
        - name: wg-easy
          image: ghcr.io/wg-easy/wg-easy
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            capabilities:
              add:
                - NET_ADMIN
          ports:
            - name: wg
              containerPort: 51820
              protocol: UDP
            - name: wgdashboard
              containerPort: 51821
              protocol: TCP
          env:
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wg-easy
                  key: password
            - name: WG_HOST
              value: "vpn.pacholoamit.com"
            - name: "WG_PORT"
              value: "51820"
            - name: WG_DEFAULT_DNS
              value: "1.1.1.1"
          resources:
            requests:
              memory: "64Mi"
              cpu: "150m"
            limits:
              memory: "128Mi"
          volumeMounts:
            - name: wg-easy-data
              mountPath: /etc/wireguard
      volumes:
        - name: wg-easy-data
          persistentVolumeClaim:
            claimName: wg-easy